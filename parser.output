Terminals unused in grammar

   IF
   ELSE
   THEN
   FOR


Grammar

    0 $accept: program $end

    1 program: program stmt
    2        | %empty

    3 block: '{' stmt_array '}'

    4 stmt_array: stmt_array stmt
    5           | %empty

    6 stmt: PRINT E ';'
    7     | INT ID '=' E ';'
    8     | STRING ID '=' E ';'
    9     | block
   10     | WHILE '(' E ')' stmt
   11     | ID '=' E ';'

   12 E: E '+' E
   13  | E '-' E
   14  | E '*' E
   15  | E '/' E
   16  | '(' E ')'
   17  | E LT E
   18  | E GT E
   19  | E LE E
   20  | E GE E
   21  | E EQ E
   22  | E NE E
   23  | ID
   24  | NUM
   25  | TXT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 16
')' (41) 10 16
'*' (42) 14
'+' (43) 12
'-' (45) 13
'/' (47) 15
';' (59) 6 7 8 11
'=' (61) 7 8 11
'{' (123) 3
'}' (125) 3
error (256)
PRINT (258) 6
INT (259) 7
STRING (260) 8
WHILE (261) 10
IF (262)
ELSE (263)
THEN (264)
FOR (265)
LE (266) 19
GE (267) 20
GT (268) 18
LT (269) 17
EQ (270) 21
NE (271) 22
NUM (272) 24
ID (273) 7 8 11 23
TXT (274) 25


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1 2, on right: 0 1
block (32)
    on left: 3, on right: 9
stmt_array (33)
    on left: 4 5, on right: 3 4
stmt (34)
    on left: 6 7 8 9 10 11, on right: 1 4 10
E (35)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 6
    7 8 10 11 12 13 14 15 16 17 18 19 20 21 22


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stmt

    $end    shift, and go to state 2
    PRINT   shift, and go to state 3
    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    '{'     shift, and go to state 8

    block  go to state 9
    stmt   go to state 10


State 2

    0 $accept: program $end .

    $default  accept


State 3

    6 stmt: PRINT . E ';'

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 15


State 4

    7 stmt: INT . ID '=' E ';'

    ID  shift, and go to state 16


State 5

    8 stmt: STRING . ID '=' E ';'

    ID  shift, and go to state 17


State 6

   10 stmt: WHILE . '(' E ')' stmt

    '('  shift, and go to state 18


State 7

   11 stmt: ID . '=' E ';'

    '='  shift, and go to state 19


State 8

    3 block: '{' . stmt_array '}'

    $default  reduce using rule 5 (stmt_array)

    stmt_array  go to state 20


State 9

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 10

    1 program: program stmt .

    $default  reduce using rule 1 (program)


State 11

   24 E: NUM .

    $default  reduce using rule 24 (E)


State 12

   23 E: ID .

    $default  reduce using rule 23 (E)


State 13

   25 E: TXT .

    $default  reduce using rule 25 (E)


State 14

   16 E: '(' . E ')'

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 21


State 15

    6 stmt: PRINT E . ';'
   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 32


State 16

    7 stmt: INT ID . '=' E ';'

    '='  shift, and go to state 33


State 17

    8 stmt: STRING ID . '=' E ';'

    '='  shift, and go to state 34


State 18

   10 stmt: WHILE '(' . E ')' stmt

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 35


State 19

   11 stmt: ID '=' . E ';'

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 36


State 20

    3 block: '{' stmt_array . '}'
    4 stmt_array: stmt_array . stmt

    PRINT   shift, and go to state 3
    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    '{'     shift, and go to state 8
    '}'     shift, and go to state 37

    block  go to state 9
    stmt   go to state 38


State 21

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   16  | '(' E . ')'
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 39


State 22

   19 E: E LE . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 40


State 23

   20 E: E GE . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 41


State 24

   18 E: E GT . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 42


State 25

   17 E: E LT . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 43


State 26

   21 E: E EQ . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 44


State 27

   22 E: E NE . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 45


State 28

   12 E: E '+' . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 46


State 29

   13 E: E '-' . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 47


State 30

   14 E: E '*' . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 48


State 31

   15 E: E '/' . E

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 49


State 32

    6 stmt: PRINT E ';' .

    $default  reduce using rule 6 (stmt)


State 33

    7 stmt: INT ID '=' . E ';'

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 50


State 34

    8 stmt: STRING ID '=' . E ';'

    NUM  shift, and go to state 11
    ID   shift, and go to state 12
    TXT  shift, and go to state 13
    '('  shift, and go to state 14

    E  go to state 51


State 35

   10 stmt: WHILE '(' E . ')' stmt
   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 52


State 36

   11 stmt: ID '=' E . ';'
   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 53


State 37

    3 block: '{' stmt_array '}' .

    $default  reduce using rule 3 (block)


State 38

    4 stmt_array: stmt_array stmt .

    $default  reduce using rule 4 (stmt_array)


State 39

   16 E: '(' E ')' .

    $default  reduce using rule 16 (E)


State 40

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   19  | E LE E .
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 19 (E)


State 41

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   20  | E GE E .
   21  | E . EQ E
   22  | E . NE E

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (E)


State 42

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   18  | E GT E .
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 18 (E)


State 43

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   17  | E LT E .
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 17 (E)


State 44

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   21  | E EQ E .
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 21 (E)


State 45

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E
   22  | E NE E .

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 22 (E)


State 46

   12 E: E . '+' E
   12  | E '+' E .
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 12 (E)


State 47

   12 E: E . '+' E
   13  | E . '-' E
   13  | E '-' E .
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 13 (E)


State 48

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   14  | E '*' E .
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    $default  reduce using rule 14 (E)


State 49

   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   15  | E '/' E .
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    $default  reduce using rule 15 (E)


State 50

    7 stmt: INT ID '=' E . ';'
   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 54


State 51

    8 stmt: STRING ID '=' E . ';'
   12 E: E . '+' E
   13  | E . '-' E
   14  | E . '*' E
   15  | E . '/' E
   17  | E . LT E
   18  | E . GT E
   19  | E . LE E
   20  | E . GE E
   21  | E . EQ E
   22  | E . NE E

    LE   shift, and go to state 22
    GE   shift, and go to state 23
    GT   shift, and go to state 24
    LT   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ';'  shift, and go to state 55


State 52

   10 stmt: WHILE '(' E ')' . stmt

    PRINT   shift, and go to state 3
    INT     shift, and go to state 4
    STRING  shift, and go to state 5
    WHILE   shift, and go to state 6
    ID      shift, and go to state 7
    '{'     shift, and go to state 8

    block  go to state 9
    stmt   go to state 56


State 53

   11 stmt: ID '=' E ';' .

    $default  reduce using rule 11 (stmt)


State 54

    7 stmt: INT ID '=' E ';' .

    $default  reduce using rule 7 (stmt)


State 55

    8 stmt: STRING ID '=' E ';' .

    $default  reduce using rule 8 (stmt)


State 56

   10 stmt: WHILE '(' E ')' stmt .

    $default  reduce using rule 10 (stmt)
